---
apiVersion: v1
kind: Service
metadata:
  name: auth-srv
spec:
  type: ClusterIP
  selector:
    app: auth
  ports:
    - name: auth
      protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      initContainers:
        - name: wait-db
          image: waisbrot/wait
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: '32Mi'
          env:
            - name: TARGETS
              value: 'postgres-srv:5432'
        - name: init-auth-db
          image: postgres:11
          command: ['sh', '-c', 'createdb conf_app_auth || true']
          env:
            - name: PGHOST
              value: 'postgres-srv'
            - name: PGUSER
              value: 'postgres'
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: POSTGRES_PASSWORD
        - name: init-auth-migrations
          image: registry.digitalocean.com/checkmatez/conf-auth
          command: ['yarn', 'run', 'migrate']
          env:
            - name: DB_HOST
              value: 'postgres-srv'
            - name: DB_PORT
              value: '5432'
            - name: DB_NAME
              value: 'conf_app_auth'
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: auth-db
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auth-db
                  key: DB_PASSWORD
            - name: NODE_ENV
              value: 'production'
      containers:
        - name: auth
          image: registry.digitalocean.com/checkmatez/conf-auth
          env:
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: JWT_SECRET
            - name: PORT
              value: '3000'
            - name: ACCESS_TOKEN_EXPIRES_IN_SEC
              value: '900'
            - name: REFRESH_TOKEN_EXPIRES_IN_SEC
              value: '2592000'
            - name: DB_HOST
              value: 'postgres-srv'
            - name: DB_PORT
              value: '5432'
            - name: DB_NAME
              value: 'conf_app_auth'
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: auth-db
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auth-db
                  key: DB_PASSWORD
            - name: NATS_CLIENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NATS_URL
              value: 'http://nats-srv:4222'
            - name: NATS_CLUSTER_ID
              value: 'conf-app'
            - name: ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: auth-admin
                  key: ADMIN_USERNAME
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auth-admin
                  key: ADMIN_PASSWORD
            - name: LOG_LEVEL
              value: 'info'
            - name: NODE_ENV
              value: 'production'
            - name: GRACEFUL_TIMEOUT_MS
              value: '16000'
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 15
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              path: /liveness
              port: http
              scheme: HTTP
            timeoutSeconds: 1
          readinessProbe:
            initialDelaySeconds: 15
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: http
              scheme: HTTP
            timeoutSeconds: 1
