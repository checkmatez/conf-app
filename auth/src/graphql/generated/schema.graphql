### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthResult {
  accessToken: String!
  refreshToken: String!
  user: User!
}

type GenerateTokensError implements InputError {
  argErrors: [InputArgError!]!
  code: String!
  message: String!
}

union GenerateTokensResponse = AuthResult | GenerateTokensError

type InputArgError {
  argName: String!
  message: String!
}

interface InputError {
  argErrors: [InputArgError!]!
  code: String!
  message: String!
}

type LoginError implements InputError {
  argErrors: [InputArgError!]!
  code: String!
  message: String!
}

union LoginResponse = AuthResult | LoginError

type Mutation {
  generateTokens(refreshToken: String!): GenerateTokensResponse!
  login(password: String!, username: String!): LoginResponse!
  signup(email: String, password: String!, username: String!): SignupResponse!
}

type Query {
  currentUser: User!
  serviceDescription: String!
  users: UsersResult!
}

type SignupError implements InputError {
  argErrors: [InputArgError!]!
  code: String!
  message: String!
}

union SignupResponse = AuthResult | SignupError

type User {
  avatarUrl: String
  email: String
  githubProfileUrl: String
  id: ID!
  username: String!
}

type UsersResult {
  nodes: [User!]!
  total: Int!
}
